name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        env:
           NX_TUI: false
        run: |-
          npm run dev:mock > /dev/null &
          sleep 5
          npx nx run-many --target=test --all --parallel=1

      - name: Run linting
        env:
           NX_TUI: false
        run: npx nx run-many --target=lint --all --parallel --maxParallel=4

      - name: Build packages
        env:
           NX_TUI: false
        run: npx nx run-many --target=build --all --parallel --maxParallel=4

      - name: Configure Git
        env:
           NX_TUI: false
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Release (GitHub + NPM)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NX_TUI: false
          # Once we have it proper org we cans et this up
          NPM_CONFIG_PROVENANCE: false
        run: |
          npx nx release version --first-release --verbose
          npx nx release publish --verbose

      # - name: Release
      #   run: npm run release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }} 

      - name: Tag last-release
        shell: bash
        run: |
          git tag -f last-release
          git push origin last-release --force
